name: Test post fact now

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  post_now:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_KEY_SECRET: ${{ secrets.TWITTER_API_KEY_SECRET }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      MAX_LENGTH: 220
      DRY_RUN_DEFAULT: 'false'
      TWITTER_WAIT_ON_RATE_LIMIT: 'true'
      RECENT_POSTS_PATH: recent_posts.json
      PROVIDER_API_KEY: ${{ secrets.PROVIDER_API_KEY }}
      PROVIDER_BASE_URL: ${{ vars.PROVIDER_BASE_URL }}
      PROVIDER_MODEL: ${{ vars.PROVIDER_MODEL }}
      OLLAMA_MODEL: ${{ vars.OLLAMA_MODEL }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Configure engine (provider or HF or fallback)
        run: |
          if [ -n "${PROVIDER_API_KEY}" ] && [ -n "${PROVIDER_BASE_URL}" ] && [ -n "${PROVIDER_MODEL}" ]; then
            if curl -sSf -H "Authorization: Bearer ${PROVIDER_API_KEY}" "${PROVIDER_BASE_URL%/}/models" >/dev/null; then
              echo "ENGINE=auto" >> $GITHUB_ENV
            else
              echo "Provider unreachable at ${PROVIDER_BASE_URL}; using HF if available else fallback"
              echo "ENGINE=hf" >> $GITHUB_ENV
            fi
          else
            echo "ENGINE=hf" >> $GITHUB_ENV
          fi

      - name: Install HF deps (if ENGINE=hf)
        run: |
          if [ "${ENGINE}" = "hf" ]; then
            pip install --upgrade pip
            pip install transformers torch
          fi

      - name: Post a fact
        run: |
          ENGINE_TO_USE=${ENGINE:-auto}
          python -m bot post-fact --engine "$ENGINE_TO_USE" --no-dry-run || echo "post failed"
