name: Post to X randomly 17/day

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  post:
    runs-on: ubuntu-latest
    timeout-minutes: 70
    concurrency:
      group: post-to-x-hourly
      cancel-in-progress: false
    env:
      TZ: UTC
      TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_KEY_SECRET: ${{ secrets.TWITTER_API_KEY_SECRET }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      PROVIDER_BASE_URL: ${{ secrets.PROVIDER_BASE_URL }}
      PROVIDER_API_KEY: ${{ secrets.PROVIDER_API_KEY }}
      PROVIDER_MODEL: ${{ secrets.PROVIDER_MODEL }}
      MAX_LENGTH: 220
      DRY_RUN_DEFAULT: 'false'
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Fail fast if provider not configured
        run: |
          if [ -z "${PROVIDER_API_KEY}" ] || [ -z "${PROVIDER_BASE_URL}" ] || [ -z "${PROVIDER_MODEL}" ]; then
            echo "Provider not configured (PROVIDER_* secrets missing)."
            exit 1
          fi

      - name: Decide if posting this hour
        id: decide
        shell: bash
        run: |
          python - << 'PY'
          import os, sys, datetime, random
          # Use UTC by default
          now = datetime.datetime.utcnow()
          day_key = now.strftime('%Y%m%d')
          # Use a secret-derived salt for determinism without exposing values
          salt = (os.getenv('TWITTER_API_KEY') or '')[-6:]
          seed = f"{day_key}-{salt}"
          rng = random.Random(seed)
          hours = list(range(24))
          chosen_hours = rng.sample(hours, 17)  # exactly 17 unique hours
          should_post = now.hour in chosen_hours
          delay_min = 0
          if should_post:
            # Deterministic minute for this hour
            rng2 = random.Random(f"{seed}-{now.hour}")
            delay_min = rng2.randint(0, 55)
          # outputs
          print(f"should_post={str(should_post).lower()}")
          print(f"delay_min={delay_min}")
          PY
          # Export to GITHUB_OUTPUT
          eval $(python - << 'PY'
          import os, sys, datetime, random
          now = datetime.datetime.utcnow()
          day_key = now.strftime('%Y%m%d')
          salt = (os.getenv('TWITTER_API_KEY') or '')[-6:]
          seed = f"{day_key}-{salt}"
          rng = random.Random(seed)
          hours = list(range(24))
          chosen_hours = rng.sample(hours, 17)
          should_post = str(now.hour in chosen_hours).lower()
          if should_post == 'true':
            rng2 = random.Random(f"{seed}-{now.hour}")
            delay_min = rng2.randint(0, 55)
          else:
            delay_min = 0
          print(f"echo should_post={should_post} >> $GITHUB_OUTPUT")
          print(f"echo delay_min={delay_min} >> $GITHUB_OUTPUT")
          PY)

      - name: Sleep until randomized minute
        if: ${{ steps.decide.outputs.should_post == 'true' }}
        run: |
          echo "Sleeping ${{ steps.decide.outputs.delay_min }} minute(s) before posting..."
          sleep $(( 60 * ${{ steps.decide.outputs.delay_min }} ))

      - name: Choose prompt
        if: ${{ steps.decide.outputs.should_post == 'true' }}
        id: choose
        shell: bash
        run: |
          PROMPT=$(python - <<'PY'
          import random, datetime
          now = datetime.datetime.utcnow()
          seed = int(now.strftime("%Y%m%d%H"))
          random.seed(seed)
          prompts = [
            "Drop a random motivational quote, feel free to look up one on the internet or make some shit up. Also be direct a use some vulgar language",
            "Share a direct, no-fluff motivational line about self-discipline, healthy masculinity, and respectful ways to treat women. Keep it empowering, never demeaning, no slurs or hate; under 240 chars.",
            "Give a blunt tip on purpose, discipline, or delayed gratification. One line, under 240 chars.",
            "Write a short, gritty reminder about building masculine character: stoicism, responsibility, leading yourself first; always respectful to women. Under 240 chars.",
            "Punchy tweet on habits: consistency over intensity; choose one action today. Under 240 chars."
          ]
          print(random.choice(prompts))
          PY
          )
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post
        if: ${{ steps.decide.outputs.should_post == 'true' }}
        timeout-minutes: 6
        run: |
          python -m bot post "${{ steps.choose.outputs.prompt }}" --engine provider --no-dry-run

      - name: Skipped (not a posting hour)
        if: ${{ steps.decide.outputs.should_post != 'true' }}
        run: echo "Not a posting hour for today; skipping."
