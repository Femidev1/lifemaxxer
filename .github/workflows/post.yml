name: Post to X randomly 17/day

on:
  workflow_dispatch:
    inputs:
      force_now:
        description: "Post immediately (skip hourly selection)"
        required: false
        default: "false"
  schedule:
    - cron: '0 * * * *'

jobs:
  post:
    runs-on: ubuntu-latest
    timeout-minutes: 70
    concurrency:
      group: post-to-x-hourly
      cancel-in-progress: false
    env:
      TZ: UTC
      FORCE_NOW: ${{ github.event.inputs.force_now }}
      TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_KEY_SECRET: ${{ secrets.TWITTER_API_KEY_SECRET }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      PROVIDER_BASE_URL: ${{ secrets.PROVIDER_BASE_URL }}
      PROVIDER_API_KEY: ${{ secrets.PROVIDER_API_KEY }}
      PROVIDER_MODEL: ${{ secrets.PROVIDER_MODEL }}
      MAX_LENGTH: 220
      DRY_RUN_DEFAULT: 'false'
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Fail fast if provider not configured
        run: |
          if [ -z "${PROVIDER_API_KEY}" ] || [ -z "${PROVIDER_BASE_URL}" ] || [ -z "${PROVIDER_MODEL}" ]; then
            echo "Provider not configured (PROVIDER_* secrets missing)."
            exit 1
          fi
          # OpenRouter optional headers to improve acceptance
          echo "OPENROUTER_REFERER=https://github.com/${{ github.repository }}" >> $GITHUB_ENV
          echo "OPENROUTER_TITLE=Lifemaxxer Bot" >> $GITHUB_ENV

      - name: Decide if posting this hour
        id: decide
        shell: bash
        run: |
          python - << 'PY'
          import os, datetime, random
          now = datetime.datetime.utcnow()
          day_key = now.strftime('%Y%m%d')
          salt = (os.getenv('TWITTER_API_KEY') or '')[-6:]
          seed = f"{day_key}-{salt}"
          rng = random.Random(seed)
          hours = list(range(24))
          chosen_hours = rng.sample(hours, 17)
          force_now = (os.getenv('FORCE_NOW','false').lower() == 'true')
          should_post = force_now or (now.hour in chosen_hours)
          delay_min = 0
          if should_post:
              if force_now:
                  delay_min = 0
              else:
                  rng2 = random.Random(f"{seed}-{now.hour}")
                  delay_min = rng2.randint(0, 55)
          # Write to GitHub Outputs
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"should_post={'true' if should_post else 'false'}\n")
              f.write(f"delay_min={delay_min}\n")
          print(f"should_post={'true' if should_post else 'false'}")
          print(f"delay_min={delay_min}")
          PY

      - name: Sleep until randomized minute
        if: ${{ steps.decide.outputs.should_post == 'true' }}
        run: |
          echo "Sleeping ${{ steps.decide.outputs.delay_min }} minute(s) before posting..."
          sleep $(( 60 * ${{ steps.decide.outputs.delay_min }} ))

      - name: Choose prompt
        if: ${{ steps.decide.outputs.should_post == 'true' }}
        id: choose
        shell: bash
        run: |
          PROMPT=$(python - <<'PY'
          import random, datetime
          now = datetime.datetime.utcnow()
          seed = int(now.strftime("%Y%m%d%H"))
          random.seed(seed)
          prompts = [
            "Write a raw, redâ€‘pill style tweet for men about women, masculinity, purpose, goals, growth, discipline. Be blunt, confident, no fluff. No hate speech or slurs. Under 240 chars.",
            "Give a harsh truth for men on discipline and delayed gratification. Raw, direct; profanity allowed but no slurs. Under 240 chars.",
            "Drop unfiltered advice to men on dating dynamics: respect, standards, leading yourself first. Blunt, may use profanity; never demeaning groups. Under 240 chars.",
            "Short punch to the gut about purpose over comfort. Raw, no fluff; profanity allowed (no hate). Under 240 chars.",
            "Masculinity reminder: responsibility, courage, restraint. Make it gritty; profanity ok, no slurs. Under 240 chars."
          ]
          print(random.choice(prompts))
          PY
          )
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post
        if: ${{ steps.decide.outputs.should_post == 'true' }}
        timeout-minutes: 6
        run: |
          echo "PROMPT: ${{ steps.choose.outputs.prompt }}"
          python -m bot post "${{ steps.choose.outputs.prompt }}" --engine provider --no-dry-run || echo "post failed"

      - name: Skipped (not a posting hour)
        if: ${{ steps.decide.outputs.should_post != 'true' }}
        run: echo "Not a posting hour for today; skipping."
